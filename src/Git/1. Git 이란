Github : Git 으로 관리되는 소스 코드를 저장하고 공유하는 저장소

Github 기능
- 분산 버전 관리 : 중앙 집중 관리가 아닌 분산 버전 시스템으로 각 개발자들이 동시에 작업을 할 수 있도록 지원을 해줌
- 변경 사항 추적 : Git을 통해서 파일이나 디렉토리 변경 사항을 추적을 할 수 있게 해준다. 누가 어디를 바꿨는지를 다 알수 있음
- 브랜치 : 브랜치 라는 것을 통해서 다양한 개발 작업을 병렬로 진행을 할 수 있게 된다. 각각의 브랜치는 독립적인 작업 환경을 구성 하기 때문에 병렬적으	      로 동시에 작업이 가능하다. 작업이 완료 되면 각 브랜치들을 병합(merge) 해서 하나의 작업으로 합칠 수도 있다
- 원격 저장소 지원
- 이력 관리 : 이력 관리를 통해 모든 변경 사항 추적 가능
- 병합 및 충돌 해결
- 태그 : 태그를 통해서 소스 코드의 특정 버전을 마킹 할 수 있다
- Git은 서브 모드를 통해서 다양한 프로젝트의 코드를 사용할 수 있다 ( 이를 통해 코드의 재사용성을 높일 수 있다 )

Git Repository
- Git 으로 관리되는 프로젝트 저장소
- 프로젝트의 모든 파일, 폴더, 버전 정보, 변경, 이력 등을 저장

- Local Repository ( 로컬 저장소 ) -> 개발자가 작업을 수행하는 컴퓨터에 위치한 저장소 ( 내 컴퓨터에 있는 저장소를 의미 )
- Remote Repository ( 원격 저장소 ) -> 다른 개발자와 협업을 하기 위해서는 Remote Repository 라는 원격 저장소가 필요함
                                  -> 로컬에 있는 저장소의 변경 내용을 공유하기 위한 중앙 저장소에 개념으로 보면 된다.

Git Branch
- 코드 변경 사항을 병렬적으로 개발할 수 있는 기능
- 새로운 브랜치를 생성하여 기존 소스 코드와는 별개로 작업을 진행
- 브랜치 간에는 서로 영향을 주지 않는다
- 여러 개발자가 동시에 작업할 때 충돌을 방지
